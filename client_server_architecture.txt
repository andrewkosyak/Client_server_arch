      КЛИЕНТ-серверная архитектура – это архитектура, в которой сетевая нагрузка распределяется между поставщиками услуг,
 которые называются серверами и заказчиками услуг, который называются клиентами.
            Клиент и сервер- это программное обеспечение. Обычно программы на разных вычислительных машинах взаимодействуют 
через сетевые протоколы. Но могут и на одной машине. 

      Если в звене только клиент и сервер, то архитектура двухуровневая.
      Если клиент, сервер и база данных – трёхуровневая. 

      Клиент – компьютерное или мобильное устройство, которое с помощью браузера отправляет запрос или команду серверу.  
                                                Клиент: 
      Тонкий – компьютер или программа которая переносит все или большую часть задач на сервер. Браузер, например.  
      Толстый – приложение, которое обеспечивает расширенную функциональность независимо от центрального сервера (например, 1С бухгалтерия, онлайн-игры)

      Сервер - аппаратный или облачный сервер, который принимает запрос и выполняет его (обработка данных на сайтах, приложениях и в сервисах происходит через веб-узлы).
      Сервер обрабатывает запросы не одновременно, а в приоритетной очереди. 
      Серверами могут быть серверы http, веб-серверы, MySQL сервер и.т.
            
      Двухуровневая архитектура – клиент и сервер (пользователь отправляет запрос, который обрабатывается и на который приходит ответ в виде какого-то действия)
      Многоуровневая архитектура – в системе уже несколько устройств. Задачи от клиента распределяются между этими устройствами. 
      
      Обмен информацией осуществляется с помощью протоколов, в которых содержится информация, какие сведения нужно предоставить
 по запросу или какую задачу выполнить – IP протокол, HTTP (HyperText Transfer Protocol) протокол, FAP и др. 
      Например, при помощи HTTP протокола браузер отправляет HTTP сообщение (указывая, что и в каком виде пользователь хочет получить),
 а в ответе приходит информация, обычно в HTML (HyperText Markup Language) документе. Эти сообщения называются HTTP запросы. 
Запросы имеют специальные методы, которые говорят серверу о том, как обрабатывать сообщение. А сообщения, которые посылает сервер 
получили название HTTP ответы, они содержат помимо полезной информации еще и специальные коды состояния, которые позволяют браузеру
 узнать то, как сервер понял его запрос. 
В основе взаимодействия клиент-сервер лежит принцип того, что такое взаимодействие начинает клиент, сервер только отвечает клиенту 
и сообщает о том может ли он предоставить услугу клиенту и если может, то на каких условиях.


ИНТЕРНЕТ ПРОТОКОЛ (IP)

Internet Protocol (IP) — это наиболее простой протокол, объединивший отдельные компьютеры в глобальную сеть. Главной его задачей является маршрутизация дейтаграмм — определение маршрута следования пакетов по узлам сети. Каждое устройство — ваш ПК, принтер и т.д. — имеет IP-адрес, чтобы данные попадали к нужному адресату. Так, например, отправленный на печать файл не окажется вместо принтера в личном ПК вашего коллеги.

В качестве минусов протокола можно отметить низкую надежность. IP просто осуществляет пересылку.

Для пересылки пакетов необходимо определить, на какой порт отправить пакет. Для этого протокол имеет свою систему адресации. В качестве адресов выступает 32-битные (IPv4) или 128-битные (IPv6) адреса. Перед отправкой пакета в него добавляются header (заголовок) и payload (данные для доставки).

IPv4 является 32-разрядной системой, состоящей из четырех разделов (123.123.123.123). Он поддерживает до 4 294 967 296 адресов и является протоколом по умолчанию. Основным его преимуществом является простота. В недостатках — ограниченное адресное пространство, также называемое «исчерпанием адресов». 

IPv6, напротив, — 128-битное адресное пространство, которое обеспечивает приблизительно 2^128 степени адресов. Формат записи состоит из восьми разделов, в каждый из которых записывается четыре 16-ричных цифры. Недостаток протокола — в сложности сетевого администрирования. 

Один из основных протоколов, который работает поверх IP, — это протокол TCP, из-за чего его часто обозначают как TCP/IP. Но это не единственный протокол, который является частью интернет-протокола.



TCP — протокол обмена сообщениями в сети Интернет

TCP помогает устройствам в сети обмениваться сообщениями. Он работает на четвертом, транспортном, уровне модели OSI. 

Для передачи информации происходит дробление исходного файла на части, которые передаются получателю, а далее собираются обратно. Например, человек запрашивает веб-страницу, далее сервер обрабатывает запрос и высылает в ответ HTML-страницу при помощи протокола HTTP. Он, в свою очередь, запрашивает уровень TCP для установки требуемого соединения и отправки HTML-файла. TCP конвертирует данные в блоки, передавая их на уровень TCP пользователя, где происходит подтверждение передачи. 

Свойства протокола TCP:

    Система нумерации сегментов (Segment Numbering System). TCP отслеживает передаваемые или принимаемые сегменты, присваивая номера каждому из них. Байтам данных, которые должны быть переданы, присваивается определенный номер байта, в то время как сегментам присваиваются порядковые номера.
    Управление потоком. Эта функция ограничивает скорость, с которой отправитель передает данные. Это делается для обеспечения надежности доставки. Получатель постоянно сообщает отправителю о том, какой объем данных может быть получен.
    Контроль ошибок. Данная функция реализуется для повышения надежности путем проверки байтов на целостность.
    Порт источника и порт назначения. Протокол TCP использует специальные порты для связи  различных протоколов. Например протокол SSH использует 22й порт, HTTP — 80, HTTPS — 443, Gopher — 70. Все порты делятся на три диапазона — общеизвестные (0—1023), зарегистрированные (1024—49151) и динамические (49152—65535).



SCTP — протокол передачи управления потоком

Еще один протокол, который относится к транспортному уровню. SCTP обеспечивает надежную последовательную передачу данных. Поддерживает многоадресное соединение, когда один или оба конечных узла могут состоять из более чем одного IP-адреса. Это обеспечивает прозрачное переключение между резервными сетевыми путями.



RTP — транспортный протокол реального времени

Real-time Transfer Protocol — это протокол, который используется при передаче потокового аудио и видео и применяется при передаче голоса преимущественно в IP-телефонии. RTP применяется в совокупности с протоколом управления RTCP. Когда RTP транслирует медиа, RTCP применяется при анализе статистик QoS (Quality of Service) и обеспечивает синхронизацию разных потоков. RTP отправляется и принимается с помощью четных номеров портов, а RTCP использует нечетные номера.



Протоколы межсетевого уровня:

ICMP — протокол управляющих сообщений в сети
Задача протокола — диагностика проблем при взаимодействии устройств. Он определяет, достигли ли данные места назначения или нет. 
Основная цель ICMP — сообщать об ошибках.


OSPF — протокол маршрутизации состояния канала сети
Open Shortest Path First используется для поиска наилучшего пути между исходным и конечным маршрутизатором. Работает на межсетевом уровне модели OSI.


Протоколы прикладного уровня:

FTP — протокол передачи данных в сети
FTP — это клиент-серверный протокол, который использует два канала для передачи данных: командный, управляющий процессом передачи, и транспортный, непосредственно передающий информацию. Для FTP-протокола устройство конечного пользователя называется локальным хостом, а второй компьютер — удаленным хостом, играющим роль сервера. 


